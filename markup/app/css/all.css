/* ==========================================================================
   Normalize.scss settings
   ========================================================================== */
/**
 * Includes legacy browser support IE6/7
 *
 * Set to false if you want to drop support for IE6 and IE7
 */
/* Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 * 3. Corrects text resizing oddly in IE 6/7 when body `font-size` is set using
 *  `em` units.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevents modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Addresses styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * 1. Remove border when inside `a` element in IE 8/9/10.
 * 2. Improves image quality when scaled in IE 7.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 * Correct font family set oddly in IE 6, Safari 4/5, and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *  Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 * 4. Improves appearance and consistency in all browsers.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *  and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *  `input` and others.
 * 4. Removes inner spacing in IE 7 without affecting normal text inputs.
 *  Known issue: inner spacing remains in IE 6.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 *  Known issue: excess padding remains in IE 6.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 * 3. Corrects text not wrapping in Firefox 3.
 * 4. Corrects alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

@font-face {
  font-family: 'Bariol';
  src: url("../fonts/bariol_regular-webfont.woff2") format("woff2"), url("../fonts/bariol_regular-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'Bariol';
  src: url("../fonts/bariol_regular_italic-webfont.woff2") format("woff2"), url("../fonts/bariol_regular_italic-webfont.woff") format("woff");
  font-weight: normal;
  font-style: italic; }

@font-face {
  font-family: 'icomoon';
  src: url("../fonts/icomoon.eot?u5mlgc");
  src: url("../fonts/icomoon.eot?u5mlgc#iefix") format("embedded-opentype"), url("../fonts/icomoon.ttf?u5mlgc") format("truetype"), url("../fonts/icomoon.woff?u5mlgc") format("woff"), url("../fonts/icomoon.svg?u5mlgc#icomoon") format("svg");
  font-weight: normal;
  font-style: normal; }

[class^="icon-"], [class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'icomoon' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-chevron-right:before {
  content: "\e900"; }

.icon-chevron-left:before {
  content: "\e901"; }

.icon-feed:before {
  content: "\e902"; }

.icon-rss:before {
  content: "\e902"; }

.icon-facebook:before {
  content: "\e903"; }

.icon-facebook-f:before {
  content: "\e903"; }

.icon-twitter:before {
  content: "\e904"; }

*,
*:before,
*:after {
  box-sizing: border-box; }

img {
  max-width: 100%;
  height: auto; }

#page {
  overflow: hidden; }

body {
  margin: 0;
  color: #232324;
  font-size: 18px;
  line-height: 1.166;
  font-family: Bariol, Arial, Helvetica, sans-serif;
  background-color: #fff; }

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 10px; }

h1,
h2,
h3,
p {
  margin: 0 0 10px; }

h2 {
  font-size: 40px;
  letter-spacing: 7px; }

.anchor, .anchor-high {
  height: 0;
  overflow: hidden;
  text-indent: -9999px;
  position: relative;
  top: -103px; }
  .anchor-high {
    top: -285px; }

.header {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 10;
  background: #f56262;
  padding: 18px 0 12px;
  color: #fff; }

.header-wrapper {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-between;
  align-items: center; }

@media (min-width: 768px) and (max-width: 1024px) {
  .header-wrapper {
    justify-content: space-around; } }

.corner {
  width: 0;
  height: 0;
  border-bottom: 63px solid rgba(255, 255, 255, 0.2);
  border-right: 63px solid #f56262;
  position: absolute;
  top: 0;
  right: 0; }
  @media (max-width: 1100px) {
    .corner {
      display: none; } }

.corner:after {
  content: "";
  width: 0;
  height: 0;
  border-top: 57px solid rgba(0, 0, 0, 0.2);
  border-left: 57px solid transparent;
  position: absolute;
  top: 63px;
  right: -63px; }

.welcome {
  background: #eb4f4e;
  color: #fff;
  text-align: center;
  padding: 154px 0 0; }
  .welcome p {
    font-size: 20px;
    font-weight: bold;
    letter-spacing: 1px; }

h1 {
  font-size: 60px;
  letter-spacing: 10px; }

.copyrighted {
  background: #232324;
  color: #fff;
  padding: 9px 0; }

.copy a {
  text-decoration: none;
  color: #eb4f4e; }
  .copy a:hover {
    text-decoration: underline; }

.copy p {
  margin: 0; }

.copyrighted-wrapper {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-between;
  align-items: center; }

.map-holder {
  position: relative; }

.map {
  width: 100%; }

.map-info {
  width: 600px;
  text-align: center;
  background: rgba(0, 0, 0, 0.8);
  border-radius: 5px;
  padding: 10px 0 25px;
  position: absolute;
  z-index: 2;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%); }
  .map-info:after {
    content: "";
    width: 0;
    height: 0;
    border-top: 10px solid rgba(0, 0, 0, 0.8);
    border-left: 7px solid transparent;
    border-right: 7px solid transparent;
    position: absolute;
    bottom: -10px; }

.map-info a {
  text-decoration: none;
  color: #eb4f4e;
  font-size: 20px;
  font-style: normal; }
  .map-info a:hover {
    text-decoration: underline; }

.map-info-title {
  font-size: 30px;
  color: #fff;
  margin: 0 0 20px; }

.map-info-mail {
  margin: 0 0 20px; }

.merits {
  background: #232324;
  padding: 30px 0 15px;
  color: #fff; }

.merits-title-block {
  text-align: center;
  margin: 0 0 40px; }

.merits-title-txt {
  color: #eb4f4e;
  font-size: 20px;
  letter-spacing: 1px; }

.merits-ico-wrapper {
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
  align-items: center; }

.team {
  background: #6cc372;
  text-align: center;
  padding: 32px 0 10px;
  color: #fff; }

.team-title-txt {
  font-size: 20px;
  color: #232324; }

.person-wrapper {
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
  align-items: center; }

@media (min-width: 768px) and (max-width: 1024px) {
  .person-wrapper {
    flex-flow: row wrap;
    justify-content: space-around;
    align-items: flex-start; } }

.person-block {
  background: #fff;
  width: 25%;
  padding: 20px 10px 10px;
  border-radius: 5px;
  margin: 0 0 20px 15px; }

@media (min-width: 768px) and (max-width: 1024px) {
  .person-block {
    width: 48%;
    margin: 0 0 20px; } }

.person-block:first-child {
  margin: 0 0 20px; }

.team-title-block {
  margin: 0 0 35px; }

.avatar-holder {
  margin: 0 0 15px; }

.avatar-holder img {
  border-radius: 50%;
  border: 10px solid #6cc372; }

.person-name {
  color: #6cc372;
  font-size: 25px;
  margin: 0 0 10px; }

.person-position {
  color: #eb4f4e;
  font-weight: 600;
  letter-spacing: 1px;
  margin: 0 0 25px; }

.follow-button a {
  display: flex;
  justify-content: flex-start;
  border-radius: 2px;
  background: #6cc372;
  font-size: 25px;
  text-decoration: none;
  color: #fff;
  padding: 5px 15px;
  letter-spacing: 3px; }
  .follow-button a:hover {
    background: #61b067; }

.follow-button [class^="icon-"] {
  font-size: 34px;
  margin: 0 18px 0 0; }

.portfolio {
  background: #f0f0f0;
  padding: 32px 0 188px; }

.portfolio-title-block {
  margin: 0 0 30px;
  text-align: center; }

.portfolio-title {
  color: #616161; }

.portfolio-title-txt {
  color: #61af66;
  font-size: 21px;
  letter-spacing: 1px; }

.portfolio-list-wrapper {
  position: relative; }

.portfolio-prev-arrow {
  position: absolute;
  left: -14%;
  top: 33%; }
  .portfolio-prev-arrow .chevron-left {
    width: 18px;
    height: 18px;
    border-left: 4px solid  #61af66;
    border-bottom: 4px solid #61af66;
    transform: rotate(45deg); }
  @media (max-width: 1245px) {
    .portfolio-prev-arrow {
      left: 0; } }

.portfolio-next-arrow {
  position: absolute;
  right: -14%;
  top: 31%; }
  .portfolio-next-arrow .chevron-right {
    width: 18px;
    height: 18px;
    border-right: 4px solid  #61af66;
    border-bottom: 4px solid #61af66;
    transform: rotate(315deg); }
  @media (max-width: 1245px) {
    .portfolio-next-arrow {
      right: 0; } }

.portfolio-list {
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
  align-items: center;
  margin: 0 0 20px; }
  @media (max-width: 1245px) {
    .portfolio-list {
      padding: 0 30px; } }

@media (min-width: 768px) and (max-width: 1024px) {
  .portfolio-list {
    flex-flow: row wrap;
    justify-content: space-around; } }

.portfolio-item a {
  display: block;
  text-decoration: none; }

.portfolio-item {
  width: 25%;
  margin: 0 0 20px 50px;
  text-align: center; }

@media (min-width: 768px) and (max-width: 1024px) {
  .portfolio-item {
    width: 40%;
    margin: 0 0 20px; } }

.portfolio-item:first-child {
  margin: 0 0 20px; }

.portfolio-img {
  width: 100%;
  margin: 0 0 24px; }

.portfolio-sign {
  font-size: 21px;
  color: #232324; }

.bill {
  padding: 0 0 18px;
  border-top: 1px solid #d8d8d8; }

.bill-block {
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
  align-items: flex-end;
  margin: -143px 0 18px; }

.bill-more-info {
  font-size: 20px;
  color: #eb4f4e;
  text-align: center;
  margin: 0 0 10px; }
  .bill-more-info a {
    color: #eb4f4e;
    text-decoration: none; }
    .bill-more-info a:hover {
      text-decoration: underline; }

.tweets {
  background: #eb4f4e;
  color: #fff;
  padding: 30px 0 18px; }

.tweets-wrapper {
  position: relative; }
  @media (max-width: 1245px) {
    .tweets-wrapper {
      padding: 0 46px; } }

.tweets-prev-arrow {
  position: absolute;
  left: -11%;
  top: 42%;
  background: #000;
  border-radius: 50%;
  padding: 13px 14px;
  height: 36px;
  width: 36px; }
  .tweets-prev-arrow .chevron-left {
    width: 10px;
    height: 10px;
    border-left: 3px solid  #fff;
    border-bottom: 3px solid #fff;
    transform: rotate(45deg); }
  @media (max-width: 1245px) {
    .tweets-prev-arrow {
      left: 0; } }

.tweets-next-arrow {
  position: absolute;
  right: -11%;
  top: 42%;
  background: #000;
  border-radius: 50%;
  padding: 13px 11px;
  height: 36px;
  width: 36px; }
  .tweets-next-arrow .chevron-right {
    width: 10px;
    height: 10px;
    border-right: 3px solid  #fff;
    border-bottom: 3px solid #fff;
    transform: rotate(315deg); }
  @media (max-width: 1245px) {
    .tweets-next-arrow {
      right: 0; } }

.tweets-title-block {
  text-align: center;
  margin: 0 0 20px; }

.tweets-title-txt {
  font-size: 20px;
  letter-spacing: 1px;
  color: #232324; }

.twitter-ico {
  text-align: center;
  margin: 0 0 18px; }

.twitter-ico [class^="icon-"] {
  font-size: 36px; }

.twitter-txt {
  font-size: 21px;
  line-height: 30px; }
  .twitter-txt a {
    color: #1f1f20;
    text-decoration: none; }
    .twitter-txt a:hover {
      text-decoration: underline; }

.nav-holder {
  position: relative; }

.nav-list {
  list-style: none;
  padding: 0;
  margin: 0; }

.nav-item {
  display: inline-block;
  margin: 0 0 0 22px; }
  .nav-item.active a {
    background: #000; }
  .nav-item a {
    padding: 3px 13px;
    border-radius: 2px;
    font-size: 18px;
    font-weight: bold;
    color: inherit;
    text-decoration: none;
    display: block; }
    .nav-item a:hover {
      background: #000; }

.hidden-menu {
  position: absolute;
  top: 0;
  right: 0;
  display: none; }
  .hidden-menu-item {
    width: 30px;
    height: 5px;
    margin: 0 0 5px;
    background: #fff; }

.logo-name {
  font-size: 35px;
  letter-spacing: 3px;
  color: #fff; }

.logo a {
  color: #fff;
  text-decoration: none;
  display: block; }

.socials {
  list-style: none;
  padding: 0;
  margin: 0; }
  .socials-item {
    display: inline-block;
    margin: 0 0 0 5px; }
    .socials-item a {
      color: #fff;
      text-decoration: none;
      background: #eb4f4e;
      border-radius: 2px;
      display: block;
      line-height: 32px;
      text-align: center;
      width: 28px;
      height: 28px; }
      .socials-item a:hover {
        background: #bc3f3e; }

.merits-ico {
  text-align: center;
  margin: 0 0 20px 5%;
  padding: 20px 0 0;
  width: 33.333%; }

.merits-ico:first-child {
  margin: 0 0 20px; }

.merits-link {
  display: block;
  text-decoration: none; }

.ico-holder {
  margin: 0 0 10px; }

.ico-title {
  color: #fff;
  font-size: 30px;
  margin: 0; }

.ico-txt {
  font-size: 20px;
  color: #eb4f4e; }

.bill-list {
  margin: 0 0 10px 25px;
  padding: 0;
  list-style: none;
  text-align: center;
  width: 33.333%; }
  .bill-list:first-child {
    margin: 0 0 10px; }
  .bill-list.active .bill-item-title {
    color: #eb4f4e; }
  .bill-list.active .bill-item-level {
    color: #616161; }
  .bill-list.active .bill-item-price {
    background: #eb4f4e; }
    .bill-list.active .bill-item-price a {
      color: #eb4f4e; }

.bill-item-title-block {
  border-bottom: 1px solid #d8d8d8;
  box-shadow: 0 1px 1px #fff;
  border-radius: 5px 5px 0 0;
  padding: 15px;
  background: #fff; }

.bill-item-title {
  font-size: 40px;
  color: #616161;
  letter-spacing: 3px; }

.bill-item-level {
  font-size: 20px;
  color: #eb4f4e;
  letter-spacing: 2px; }

.bill-item {
  border-bottom: 1px solid #d8d8d8;
  box-shadow: 0 1px 1px #fff;
  background: #f0f0f0; }
  .bill-item a {
    text-decoration: none;
    display: block;
    color: #616161;
    letter-spacing: 1px;
    padding: 14px 0; }
    .bill-item a:hover {
      background: #e4e4e4; }

.bill-item-price {
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
  align-items: center;
  background: #616161;
  color: #fff;
  border-radius: 0 0 5px 5px;
  padding: 10px; }
  .bill-item-price a {
    color: #616161;
    text-decoration: none;
    background: #fff;
    padding: 3px 22px;
    border-radius: 2px;
    display: block;
    letter-spacing: 1px;
    font-size: 21px;
    font-weight: bold; }
    .bill-item-price a:hover {
      background: #e6e6e6;
      color: #444444; }

.price-value {
  font-size: 64px;
  font-weight: bold;
  display: flex; }
  .price-value:before {
    content: '$';
    margin: 0 7px 0 0;
    align-self: center;
    font-size: 28px;
    font-weight: bold; }
  .price-value:after {
    content: '/mo';
    margin: 0 0 10px 10px;
    align-self: flex-end;
    font-size: 25px;
    font-weight: normal; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
